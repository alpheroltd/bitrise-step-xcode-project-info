format_version: 1.1.0
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

workflows:

  test:
    before_run:
    - test-valid-cases
    - test-invalid-cases

  test-valid-cases:
    steps:

    - path::./:
        title: Test no target specified
        inputs:
        - xcodeproj_path: $BITRISE_SOURCE_DIR/_tmp/Test/iOSApp/iOSApp.xcodeproj

    - path::./:
        title: Test iOS app version
        inputs:
        - xcodeproj_path: $BITRISE_SOURCE_DIR/_tmp/Test/iOSApp/iOSApp.xcodeproj
        - target: iOSApp
    
    - path::./:
        title: Test iOS widget target version
        inputs:
        - xcodeproj_path: $BITRISE_SOURCE_DIR/_tmp/Test/iOSApp/iOSApp.xcodeproj
        - target: iOSAppWidgetExtension

    - path::./:
        title: Test workspace iOSApp version
        inputs:
        - xcworkspace_path: ./_tmp/Test/Test.xcworkspace
        - scheme_name: iOSApp
    
    - path::./:
        title: Test iOS widget target version
        inputs:
        - xcworkspace_path: ./_tmp/Test/Test.xcworkspace
        - scheme_name: iOSAppWidgetExtension
    
    - path::./:
        title: Test iOS widget target version
        inputs:
        - xcworkspace_path: ./_tmp/Test/Test.xcworkspace
        - scheme_name: tvOSApp

  test-invalid-cases:
    steps:
    - path::./:
        title: Test no inputs (expect exit code 1)
        is_skippable: true
    - script:
        title: Verify outputs
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            if [ ! -z "$XPI_VERSION" ]; then
                echo "[FAIL] The version number should not have a value"
                exit 1 
            fi
            if [ ! -z "$XPI_BUILD" ]; then
                echo "[FAIL] The build number should not have a value"
                exit 1 
            fi
            exit 0

    - path::./:
        title: Test missing scheme name (expect exit code 1)
        is_skippable: true
        inputs:
        - xcworkspace_path: ./_tmp/Test/Test.xcworkspace
        # - scheme_name: tvOSApp
    - script:
        title: Verify outputs
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            if [ ! -z "$XPI_VERSION" ]; then
                echo "[FAIL] The version number should not have a value"
                exit 1 
            fi
            if [ ! -z "$XPI_BUILD" ]; then
                echo "[FAIL] The build number should not have a value"
                exit 1 
            fi
            exit 0

    - path::./:
        title: Test bad path (expect exit code 1)
        is_skippable: true
        inputs:
        - xcworkspace_path: ./DoesNotExist.xcworkspace
        - scheme_name: tvOSApp
    - script:
        title: Verify outputs
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            if [ ! -z "$XPI_VERSION" ]; then
                echo "[FAIL] The version number should not have a value"
                exit 1 
            fi
            if [ ! -z "$XPI_BUILD" ]; then
                echo "[FAIL] The build number should not have a value"
                exit 1 
            fi
            exit 0

  # ----------------------------------------------------------------
  # --- workflows to Share this step into a Step Library
  audit-this-step:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            stepman audit --step-yml ./step.yml
          
  share-this-step:
    envs:
      # if you want to share this step into a StepLib
      - MY_STEPLIB_REPO_FORK_GIT_URL: https://github.com/tadija/bitrise-steplib.git
      - STEP_ID_IN_STEPLIB: xcode-project-info
      - STEP_GIT_VERION_TAG_TO_SHARE: 2.1.0
      - STEP_GIT_CLONE_URL: https://github.com/tadija/bitrise-step-xcode-project-info.git
    description: |-
      If this is the first time you try to share a Step you should
      first call: $ bitrise share

      This will print you a guide, and information about how Step sharing
      works. Please read it at least once!

      As noted in the Step sharing guide you'll have to fork the
      StepLib you want to share this step into. Once you're done with forking
      the repository you should set your own fork's git clone URL
      in the `.bitrise.secrets.yml` file, or here in the `envs` section,
      as the value of the `MY_STEPLIB_REPO_FORK_GIT_URL` environment.

      You're now ready to share this Step, just make sure that
      the `STEP_ID_IN_STEPLIB` and `STEP_GIT_VERION_TAG_TO_SHARE`
      environments are set to the desired values!

      To share this Step into a StepLib you can just run: $ bitrise run share-this-step

      Once it finishes the only thing left is to actually create a Pull Request,
      the way described in the guide printed at the end of the process.
    before_run:
    - audit-this-step
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            set -x

            bitrise share start -c ${MY_STEPLIB_REPO_FORK_GIT_URL}

            bitrise share create --stepid ${STEP_ID_IN_STEPLIB} --tag ${STEP_GIT_VERION_TAG_TO_SHARE} --git ${STEP_GIT_CLONE_URL}

            bitrise share finish
